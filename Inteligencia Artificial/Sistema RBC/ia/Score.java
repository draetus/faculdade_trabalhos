package ia;

import java.util.ArrayList;
import java.util.List;

public class Score {

    public double[] pesos = {0.6, 0.1, 0.9, 1, 0.3, 0.9, 0.8, 0.2, 0.1, 1, 0.8};

    public double[][] genero_similaridade = {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 1, 0.8, 0.7, 0.9, 0.7, 0.2, 0.1, 0.1, 0.1, 0.1, 0.4, 0.4, 0.9, 0.6, 0.1, 0.1, 0.1, 0.1},
    {0, 0.8, 1, 0.8, 0.1, 0.2, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.9, 0.6, 0.1, 0.7, 0.6, 0.7, 0.1},
    {0, 0.7, 0.8, 1, 0.8, 0.6, 0.1, 0.1, 0.1, 0.6, 0.1, 0.9, 0.7, 0.6, 0.4, 0.8, 0.8, 0.6, 0.1},
    {0, 0.9, 0.1, 0.8, 1, 0.9, 0.6, 0.4, 0.6, 0.7, 0.7, 0.8, 0.6, 0.8, 0.9, 0.1, 0.1, 0.1, 0.1},
    {0, 0.7, 0.2, 0.6, 0.9, 1, 0.8, 0.1, 0.1, 0.6, 0.6, 0.9, 0.4, 0.9, 0.8, 0.1, 0.1, 0.3, 0.1},
    {0, 0.2, 0.1, 0.1, 0.6, 0.8, 1, 0.8, 0.8, 0.8, 0.8, 0.7, 0.3, 0.7, 0.7, 0.1, 0.1, 0.4, 0.1},
    {0.1, 0.1, 0.1, 0.4, 0.1, 0.8, 1, 0.8, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1},
    {0, 0.1, 0.1, 0.1, 0.6, 0.1, 0.8, 0.8, 1, 0.4, 0.8, 0.4, 0.1, 0.8, 0.1, 0.1, 0.1, 0.5, 0.1},
    {0, 0.1, 0.2, 0.6, 0.7, 0.6, 0.8, 0.1, 0.4, 1, 0.5, 0.9, 0.4, 0.4, 0.9, 0.1, 0.1, 0.5, 0.1},
    {0, 0.1, 0.1, 0.1, 0.7, 0.6, 0.8, 0.1, 0.8, 0.5, 1, 0.1, 0.1, 0.8, 0.9, 0.1, 0.1, 0.2, 0.1},
    {0, 0.4, 0.1, 0.9, 0.8, 0.9, 0.7, 0.1, 0.4, 0.9, 0.1, 1, 0.7, 0.5, 0.6, 0.1, 0.1, 0.4, 0.1},
    {0, 0.4, 0.9, 0.7, 0.6, 0.4, 0.3, 0.1, 0.1, 0.4, 0.1, 0.7, 1, 0.8, 0.3, 0.6, 0.4, 0.8, 0.1},
    {0, 0.9, 0.6, 0.6, 0.8, 0.9, 0.7, 0.1, 0.8, 0.4, 0.8, 0.5, 0.8, 1, 0.6, 0.1, 0.1, 0.4, 0.1},
    {0, 0.6, 0.1, 0.4, 0.9, 0.8, 0.7, 0.1, 0.1, 0.9, 0.9, 0.6, 0.3, 0.6, 1, 0.1, 0.1, 0.7, 0.1},
    {0, 0.1, 0.7, 0.8, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.6, 0.1, 0.1, 1, 0.4, 0.9, 0.1},
    {0, 0.1, 0.6, 0.8, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.4, 0.1, 0.1, 0.4, 1, 0.9, 0.1},
    {0, 0.1, 0.7, 0.6, 0.1, 0.3, 0.4, 0.1, 0.5, 0.5, 0.2, 0.4, 0.8, 0.4, 0.7, 0.9, 0.9, 1, 0.1},
    {0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1}};

    public double[][] tipo_visao_similaridade = {{1, 0.1, 0.8, 0.7, 0.8, 0.7, 0.1, 0.1},
    {0.1, 1, 0.3, 0.2, 0.1, 0.1, 0.4, 0.6},
    {0.8, 0.3, 1, 0.9, 0.7, 0.6, 0.3, 0.3},
    {0.7, 0.2, 0.9, 1, 0.6, 0.4, 0.3, 0.3},
    {0.8, 0.1, 0.7, 0.6, 1, 0.3, 0.1, 0.1},
    {0.7, 0.1, 0.6, 0.4, 0.3, 1, 0.1, 0.1},
    {0.1, 0.4, 0.3, 0.3, 0.1, 0.1, 1, 0.8},
    {0.1, 0.6, 0.3, 0.3, 0.1, 0.1, 0.8, 1}};

    public double[][] tema_similaridade = {{1, 0.3, 0.3, 0.6, 0.4, 0.1, 0.7, 0.6, 0.6, 0.9, 0.1, 0.3, 0.6, 0.4, 0.2, 0.3, 0.2, 0.6, 0.8, 0.8, 0.3, 0.8},
    {0.3, 1, 0.3, 0.1, 0.1, 0.1, 0.2, 0.7, 0.1, 0.7, 0.1, 0.1, 0.1, 0.2, 0.9, 0.2, 0.3, 0.2, 0.1, 0.8, 0.4, 0.6},
    {0.3, 0.3, 1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.9, 0.7, 0.1, 0.1, 0.1, 0.7, 0.1, 0.1, 0.1, 0.1, 0.7, 0.9, 0.1, 0.9},
    {0.6, 0.1, 0.1, 1, 0.8, 0.2, 0.9, 0.9, 0.4, 0.7, 0.2, 0.1, 0.1, 0.4, 0.3, 0.9, 0.1, 0.9, 0.1, 0.4, 0.1, 0.1},
    {0.4, 0.1, 0.1, 0.8, 1, 0.3, 0.8, 0.7, 0.1, 0.9, 0.1, 0.1, 0.1, 0.6, 0.2, 0.4, 0.1, 0.1, 0.1, 0.4, 0.1, 0.3},
    {0.1, 0.1, 0.1, 0.2, 0.3, 1, 0.6, 0.7, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.7, 0.2, 0.9, 0.1, 0.2, 0.1, 0.1},
    {0.7, 0.2, 0.1, 0.9, 0.8, 0.6, 1, 0.9, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3, 0.7, 0.1, 0.4, 0.1, 0.6, 0.1, 0.1},
    {0.6, 0.7, 0.1, 0.9, 0.7, 0.7, 0.9, 1, 0.3, 0.4, 0.1, 0.1, 0.1, 0.1, 0.3, 0.1, 0.4, 0.4, 0.1, 0.3, 0.1, 0.2},
    {0.6, 0.1, 0.9, 0.4, 0.1, 0.1, 0.1, 0.3, 1, 0.9, 0.8, 0.7, 0.8, 0.8, 0.1, 0.4, 0.1, 0.1, 0.1, 0.7, 0.1, 0.4},
    {0.9, 0.7, 0.7, 0.7, 0.9, 0.1, 0.1, 0.4, 0.9, 1, 0.1, 0.1, 0.1, 0.7, 0.3, 0.3, 0.1, 0.7, 0.1, 0.2, 0.1, 0.6},
    {0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.8, 0.1, 1, 0.7, 0.1, 0.1, 0.1, 0.9, 0.1, 0.8, 0.1, 0.8, 0.1, 0.2},
    {0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.7, 0.1, 0.7, 1, 0.7, 0.8, 0.2, 0.2, 0.1, 0.7, 0.9, 0.4, 0.1, 0.4},
    {0.6, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.1, 0.1, 0.7, 1, 0.8, 0.1, 0.4, 0.1, 0.4, 0.2, 0.6, 0.1, 0.6},
    {0.4, 0.2, 0.7, 0.4, 0.6, 0.1, 0.1, 0.1, 0.8, 0.7, 0.1, 0.8, 0.8, 1, 0.1, 0.6, 0.1, 0.3, 0.9, 0.1, 0.1, 0.4},
    {0.2, 0.9, 0.1, 0.3, 0.2, 0.2, 0.3, 0.3, 0.1, 0.3, 0.1, 0.2, 0.1, 0.1, 1, 0.2, 0.8, 0.4, 0.1, 0.9, 0.1, 0.1},
    {0.3, 0.2, 0.1, 0.9, 0.4, 0.7, 0.7, 0.1, 0.4, 0.3, 0.9, 0.2, 0.4, 0.6, 0.2, 1, 0.7, 0.2, 0.1, 0.1, 0.1, 0.3},
    {0.2, 0.3, 0.1, 0.1, 0.1, 0.2, 0.1, 0.4, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.7, 1, 0.7, 0.6, 0.2, 0.1, 0.1},
    {0.6, 0.2, 0.1, 0.9, 0.1, 0.9, 0.4, 0.4, 0.1, 0.7, 0.8, 0.7, 0.4, 0.3, 0.4, 0.2, 0.7, 1, 0.4, 0.3, 0.1, 0.1},
    {0.8, 0.1, 0.7, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.9, 0.2, 0.9, 0.1, 0.1, 0.6, 0.4, 1, 0.6, 0.1, 0.6},
    {0.8, 0.8, 0.9, 0.4, 0.4, 0.2, 0.6, 0.3, 0.7, 0.2, 0.8, 0.4, 0.6, 0.1, 0.9, 0.1, 0.2, 0.3, 0.6, 1, 0.8, 0.7},
    {0.3, 0.4, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 1, 0.1},
    {0.8, 0.6, 0.9, 0.1, 0.3, 0.1, 0.1, 0.2, 0.4, 0.6, 0.2, 0.4, 0.6, 0.4, 0.1, 0.3, 0.1, 0.1, 0.6, 0.7, 0.1, 1}};

    public double[][] produtora_similaridade = {{1, 0.8, 0.0, 0.4, 0.5, 0.1, 0.1, 1.0, 0.1, 0.9, 0.9, 0.5, 0.6, 0.3, 0.3, 0.8, 1.0, 0.2, 0.9, 0.4, 0.5},
    {0.8, 1, 0.0, 0.1, 0.9, 0.1, 0.2, 0.2, 0.9, 0.3, 0.1, 0.4, 0.2, 0.4, 0.4, 0.8, 0.2, 0.3, 0.9, 1.0, 0.2},
    {0.0, 0.0, 1, 0.9, 0.2, 0.6, 0.8, 0.4, 0.3, 0.5, 0.4, 0.3, 0.0, 1.0, 1.0, 0.6, 0.8, 0.2, 0.2, 0.4, 0.8},
    {0.4, 0.1, 0.9, 1, 0.3, 0.5, 0.0, 0.6, 0.3, 0.4, 0.8, 0.1, 0.1, 0.9, 0.5, 0.8, 0.1, 0.8, 0.3, 0.2, 0.0},
    {0.5, 0.9, 0.2, 0.3, 1, 0.4, 0.2, 0.2, 0.6, 0.4, 0.3, 0.5, 0.5, 0.3, 0.8, 0.6, 0.6, 0.3, 0.4, 0.8, 0.4},
    {0.1, 0.1, 0.6, 0.5, 0.4, 1, 0.8, 0.6, 0.3, 0.4, 0.0, 0.8, 0.1, 0.7, 0.4, 0.3, 0.7, 0.5, 0.0, 0.9, 1.0},
    {0.1, 0.2, 0.8, 0.0, 0.2, 0.8, 1, 0.3, 0.3, 0.6, 0.3, 0.7, 0.8, 0.7, 0.9, 0.6, 0.5, 0.2, 0.8, 0.9, 0.3},
    {1.0, 0.2, 0.4, 0.6, 0.2, 0.6, 0.3, 1, 0.9, 0.4, 0.9, 0.4, 0.5, 0.1, 0.4, 0.7, 0.9, 0.8, 0.2, 0.1, 0.3},
    {0.1, 0.9, 0.3, 0.3, 0.6, 0.3, 0.3, 0.9, 1, 0.9, 0.4, 0.9, 0.4, 0.5, 0.1, 0.4, 0.7, 0.9, 0.8, 0.2, 0.1},
    {0.9, 0.3, 0.5, 0.4, 0.4, 0.4, 0.6, 0.4, 0.9, 1, 0.1, 0.6, 0.4, 0.4, 0.1, 0.9, 0.9, 0.8, 0.6, 0.1, 0.1},
    {0.9, 0.1, 0.4, 0.8, 0.3, 0.0, 0.3, 0.9, 0.4, 0.1, 1, 0.9, 0.4, 0.9, 0.8, 0.3, 0.1, 0.7, 0.0, 0.1, 0.7},
    {0.5, 0.4, 0.3, 0.1, 0.5, 0.8, 0.7, 0.4, 0.9, 0.6, 0.9, 1, 0.4, 0.7, 0.5, 0.1, 0.6, 0.7, 0.4, 0.8, 0.0},
    {0.6, 0.2, 0.0, 0.1, 0.5, 0.1, 0.8, 0.5, 0.4, 0.4, 0.4, 0.4, 1, 0.2, 0.1, 0.4, 0.5, 0.2, 0.5, 0.9, 1.0},
    {0.3, 0.4, 1.0, 0.9, 0.3, 0.7, 0.7, 0.1, 0.5, 0.4, 0.9, 0.7, 0.2, 1, 0.9, 1.0, 0.8, 0.9, 0.8, 0.4, 0.6},
    {0.3, 0.4, 1.0, 0.5, 0.8, 0.4, 0.9, 0.4, 0.1, 0.1, 0.8, 0.5, 0.1, 0.9, 1, 0.9, 0.7, 0.5, 0.6, 0.9, 0.3},
    {0.8, 0.8, 0.6, 0.8, 0.6, 0.3, 0.6, 0.7, 0.4, 0.9, 0.3, 0.1, 0.4, 1.0, 0.9, 1, 0.2, 0.1, 0.8, 0.2, 0.5},
    {1.0, 0.2, 0.8, 0.1, 0.6, 0.7, 0.5, 0.9, 0.7, 0.9, 0.1, 0.6, 0.5, 0.8, 0.7, 0.2, 1, 0.8, 0.2, 0.6, 0.5},
    {0.2, 0.3, 0.2, 0.8, 0.3, 0.5, 0.2, 0.8, 0.9, 0.8, 0.7, 0.7, 0.2, 0.9, 0.5, 0.1, 0.8, 1, 0.2, 0.5, 0.9},
    {0.9, 0.9, 0.2, 0.3, 0.4, 0.0, 0.8, 0.2, 0.8, 0.6, 0.0, 0.4, 0.5, 0.8, 0.6, 0.8, 0.2, 0.2, 1, 0.5, 0.6},
    {0.4, 1.0, 0.4, 0.2, 0.8, 0.9, 0.9, 0.1, 0.2, 0.1, 0.1, 0.8, 0.9, 0.4, 0.9, 0.2, 0.6, 0.5, 0.5, 1, 0.9},
    {0.5, 0.2, 0.8, 0.0, 0.4, 1.0, 0.3, 0.3, 0.1, 0.1, 0.7, 0.0, 1.0, 0.6, 0.3, 0.5, 0.5, 0.9, 0.6, 0.9, 1}};

    public double[][] avaliacao = {{1, 0.8, 0.6, 0.4, 0.3, 0.2, 0.1},
    {0.8, 1, 0.8, 0.5, 0.3, 0.2, 0.1},
    {0.6, 0.8, 1, 0.5, 0.4, 0.3, 0.2},
    {0.4, 0.5, 0.5, 1, 0.6, 0.5, 0.4},
    {0.3, 0.3, 0.4, 0.6, 1, 0.8, 0.7},
    {0.2, 0.2, 0.3, 0.5, 0.8, 1, 0.9},
    {0.1, 0.1, 0.2, 0.4, 0.7, 0.9, 1}};

    public double[][] faixa_etaria = {{1, 0.4, 0.3, 0.2, 0.1},
    {0.4, 1, 0.4, 0.3, 0.2},
    {0.3, 0.4, 1, 0.4, 0.3},
    {0.2, 0.3, 0.4, 1, 0.4},
    {0.1, 0.2, 0.3, 0.4, 1}};

    public int converteFaixaEtaria(String faixa_etaria) {
        switch (faixa_etaria) {
            case "Livre":
                return 0;
            case "12":
                return 1;
            case "14":
                return 2;
            case "16":
                return 3;
            case "18":
                return 4;
        }
        return -1;
    }

    public int converteAvaliacao(String avaliacao) {
        switch (avaliacao) {
            case "Extremamente negativa":
                return 0;
            case "Muito Negativa":
                return 1;
            case "Negativa":
                return 2;
            case "Neutra":
                return 3;
            case "Positiva":
                return 4;
            case "Muito Positiva":
                return 5;
            case "Extremamente Positiva":
                return 6;

        }
        return -1;
    }

    public int converteProdutora(String produtora) {
        switch (produtora) {
            case "Microsoft":
                return 0;

            case "Tencent":
                return 1;

            case "Nintedo":
                return 2;

            case "Sony":
                return 3;

            case "NCSoft":
                return 4;

            case "Blizzard":
                return 5;

            case "EA":
                return 6;

            case "Sega":
                return 7;

            case "Nexo":
                return 8;

            case "Namco":
                return 9;

            case "Konami":
                return 10;

            case "Ubisoft":
                return 11;

            case "Valve":
                return 12;

            case "Square Enix":
                return 13;

            case "Take-Two Interactive":
                return 14;

            case "Capcom":
                return 15;

            case "Bethesda":
                return 16;

            case "Atari":
                return 17;

            case "LucasArts":
                return 18;

            case "Midway":
                return 19;

            case "Indie":
                return 20;
        }
        return -1;

    }

    public int converteTema(String tema) {
        switch (tema) {
            case "Labirinto":
                return 0;

            case "Plataforma":
                return 1;

            case "Quebra-Cabeca":
                return 2;

            case "Horror":
                return 3;

            case "Furtivos":
                return 4;

            case "Mundo Aberto":
                return 5;

            case "Tiro":
                return 6;

            case "Ficcao":
                return 7;

            case "Point and click":
                return 8;

            case "Escape the room":
                return 9;

            case "Visual Novel":
                return 10;

            case "Por turno":
                return 11;

            case "Tower Defense":
                return 12;

            case "Tatico":
                return 13;

            case "Arcade":
                return 14;

            case "Simulacao":
                return 15;

            case "Luta":
                return 16;

            case "Fantasia":
                return 17;

            case "Tabuleiro":
                return 18;

            case "Casual":
                return 19;

            case "Ritmo":
                return 20;

            case "Trivia":
                return 21;

        }
        return -1;
    }

    public int converteGenero(String Genero) {
        switch (Genero) {
            case "Eroge":
                return 0;

            case "FPA":
                return 1;

            case "FPS":
                return 2;

            case "TPS":
                return 3;

            case "RPG":
                return 4;

            case "MMORPG":
                return 5;

            case "MMOG":
                return 6;

            case "MMOSG":
                return 7;

            case "WBMMOG":
                return 8;

            case "RTS":
                return 9;

            case "TBS":
                return 10;

            case "MOBA":
                return 11;

            case "Acao":
                return 12;

            case "Aventura":
                return 13;

            case "Estrategia":
                return 14;

            case "Esporte":
                return 15;

            case "Corrida":
                return 16;

            case "Simulacao":
                return 17;

            case "Outros":
                return 18;
        }
        return -1;
    }

    public int converteVisao(String Visao) {
        switch (Visao) {
            case "Fixa":
                return 0;

            case "Rolagem":
                return 1;

            case "Paralaxe":
                return 2;

            case "Rolagem Forcada":
                return 3;

            case "Mode7":
                return 4;

            case "Multiplano":
                return 5;

            case "FPS":
                return 6;

            case "TPS":
                return 7;

        }
        return -1;
    }

}
