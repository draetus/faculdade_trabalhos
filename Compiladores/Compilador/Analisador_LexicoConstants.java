/* Generated By:JavaCC: Do not edit this line. Analisador_LexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Analisador_LexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LBRACE = 5;
  /** RegularExpression Id. */
  int RBRACE = 6;
  /** RegularExpression Id. */
  int LBRACKET = 7;
  /** RegularExpression Id. */
  int RBRACKET = 8;
  /** RegularExpression Id. */
  int COMMA = 9;
  /** RegularExpression Id. */
  int THEFIM = 10;
  /** RegularExpression Id. */
  int PR_TRUE = 11;
  /** RegularExpression Id. */
  int PR_IS_TRUE = 12;
  /** RegularExpression Id. */
  int PR_FALSE = 13;
  /** RegularExpression Id. */
  int PR_IS_FALSE = 14;
  /** RegularExpression Id. */
  int PR_IS = 15;
  /** RegularExpression Id. */
  int PR_DEFINE = 16;
  /** RegularExpression Id. */
  int PR_NOT = 17;
  /** RegularExpression Id. */
  int PR_VARIABLE = 18;
  /** RegularExpression Id. */
  int PR_NATURAL = 19;
  /** RegularExpression Id. */
  int PR_REAL = 20;
  /** RegularExpression Id. */
  int PR_CHAR = 21;
  /** RegularExpression Id. */
  int PR_BOOLEAN = 22;
  /** RegularExpression Id. */
  int PR_EXECUTE = 23;
  /** RegularExpression Id. */
  int PR_GET = 24;
  /** RegularExpression Id. */
  int PR_SET = 25;
  /** RegularExpression Id. */
  int PR_PUT = 26;
  /** RegularExpression Id. */
  int PR_TO = 27;
  /** RegularExpression Id. */
  int PR_VERIFY = 28;
  /** RegularExpression Id. */
  int PR_LOOP = 29;
  /** RegularExpression Id. */
  int PR_WHILE = 30;
  /** RegularExpression Id. */
  int PR_PROGRAM = 31;
  /** RegularExpression Id. */
  int SE_NOT = 32;
  /** RegularExpression Id. */
  int SE_DIVI = 33;
  /** RegularExpression Id. */
  int SE_MOD = 34;
  /** RegularExpression Id. */
  int SE_AND = 35;
  /** RegularExpression Id. */
  int SE_MULT = 36;
  /** RegularExpression Id. */
  int SE_PLUS = 37;
  /** RegularExpression Id. */
  int SE_MIN = 38;
  /** RegularExpression Id. */
  int SE_DIVR = 39;
  /** RegularExpression Id. */
  int SE_LT = 40;
  /** RegularExpression Id. */
  int SE_GT = 41;
  /** RegularExpression Id. */
  int SE_OR = 42;
  /** RegularExpression Id. */
  int SE_POW = 43;
  /** RegularExpression Id. */
  int SE_LE = 44;
  /** RegularExpression Id. */
  int SE_GE = 45;
  /** RegularExpression Id. */
  int SE_NE = 46;
  /** RegularExpression Id. */
  int SE_EQ = 47;
  /** RegularExpression Id. */
  int SE_COMENT = 48;
  /** RegularExpression Id. */
  int INVALID_LEXICAL = 49;
  /** RegularExpression Id. */
  int INVALID_NATURAL = 50;
  /** RegularExpression Id. */
  int INVALID_REAL = 51;
  /** RegularExpression Id. */
  int LITERAL = 52;
  /** RegularExpression Id. */
  int NATURAL = 53;
  /** RegularExpression Id. */
  int REAL = 54;
  /** RegularExpression Id. */
  int INVALID_ID = 55;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 56;
  /** RegularExpression Id. */
  int ASCII = 57;
  /** RegularExpression Id. */
  int LETRA = 58;
  /** RegularExpression Id. */
  int DIGITO = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\".\"",
    "\"true\"",
    "\"is true\"",
    "\"false\"",
    "\"is false\"",
    "\"is\"",
    "\"define\"",
    "\"not\"",
    "\"variable\"",
    "\"natural\"",
    "\"real\"",
    "\"char\"",
    "\"boolean\"",
    "\"execute\"",
    "\"get\"",
    "\"set\"",
    "\"put\"",
    "\"to\"",
    "\"verify\"",
    "\"loop\"",
    "\"while\"",
    "\"program\"",
    "\"!\"",
    "\"%\"",
    "\"%%\"",
    "\"&\"",
    "\"*\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"<\"",
    "\">\"",
    "\"|\"",
    "\"**\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"==\"",
    "\":-\"",
    "<INVALID_LEXICAL>",
    "<INVALID_NATURAL>",
    "<INVALID_REAL>",
    "<LITERAL>",
    "<NATURAL>",
    "<REAL>",
    "<INVALID_ID>",
    "<IDENTIFICADOR>",
    "<ASCII>",
    "<LETRA>",
    "<DIGITO>",
    "\"not variable\"",
    "\"is true do\"",
  };

}
