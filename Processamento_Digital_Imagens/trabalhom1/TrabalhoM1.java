package trabalhom1;

import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mauricio
 */
public class TrabalhoM1 extends javax.swing.JFrame {

    VideoCaptura webCam;
    ExibeQuadro exibeQuadro;
    Thread executor;
    int mascara[][] = { {-1, -1, -1}, {-1, 8, -1}, {-1, -1, -1} };
    int mascara2[][] = { {255, 0, 255}, {0, 255, 0}, {255, 0, 255} };
    
    /**
     * Constructor
     */
    public TrabalhoM1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jspCaptura = new javax.swing.JScrollPane();
        jlbCaptura = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jOptionPane1 = new javax.swing.JOptionPane();
        Iniciar = new javax.swing.JButton();
        Sair = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        Tons_de_cinza_media = new javax.swing.JButton();
        Tons_de_cinza_ponderada = new javax.swing.JButton();
        thresholding = new javax.swing.JButton();
        negativa = new javax.swing.JButton();
        isolar_canal = new javax.swing.JButton();
        incrementar_canal_quantidade = new javax.swing.JButton();
        incrementar_canal_porcentagem = new javax.swing.JButton();
        adicao = new javax.swing.JButton();
        adicao_ponderada = new javax.swing.JButton();
        subtracao = new javax.swing.JButton();
        valor_pixel = new javax.swing.JButton();
        histograma = new javax.swing.JButton();
        Zoom_in = new javax.swing.JButton();
        Zoom_out = new javax.swing.JButton();
        convolucao = new javax.swing.JButton();
        dilatacao = new javax.swing.JButton();
        erosao = new javax.swing.JButton();
        Abertura = new javax.swing.JButton();
        Fechamento = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("www.dfilitto.com.br (WebCam X OpenCV)");

        jspCaptura.setPreferredSize(new java.awt.Dimension(646, 485));

        jlbCaptura.setPreferredSize(new java.awt.Dimension(640, 480));
        jspCaptura.setViewportView(jlbCaptura);

        jToolBar1.setRollover(true);

        Iniciar.setText("Iniciar");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });

        jTextField2.setText("Trabalho M1 - Processamento Digital de Imagens");

        Tons_de_cinza_media.setText("Tons de Cinza Media");
        Tons_de_cinza_media.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tons_de_cinza_mediaActionPerformed(evt);
            }
        });

        Tons_de_cinza_ponderada.setText("Tons de Cinza Ponderada");
        Tons_de_cinza_ponderada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tons_de_cinza_ponderadaActionPerformed(evt);
            }
        });

        thresholding.setText("Thresholding");
        thresholding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdingActionPerformed(evt);
            }
        });

        negativa.setText("Negativa");
        negativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negativaActionPerformed(evt);
            }
        });

        isolar_canal.setText("Isolar Canal");
        isolar_canal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isolar_canalActionPerformed(evt);
            }
        });

        incrementar_canal_quantidade.setText("Incrementar Canal Quantidade");
        incrementar_canal_quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementar_canal_quantidadeActionPerformed(evt);
            }
        });

        incrementar_canal_porcentagem.setText("Incrementar Canal Porcentagem");
        incrementar_canal_porcentagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementar_canal_porcentagemActionPerformed(evt);
            }
        });

        adicao.setText("Adicao");
        adicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicaoActionPerformed(evt);
            }
        });

        adicao_ponderada.setText("Adicao Ponderada");
        adicao_ponderada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicao_ponderadaActionPerformed(evt);
            }
        });

        subtracao.setText("Subtração");
        subtracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtracaoActionPerformed(evt);
            }
        });

        valor_pixel.setText("Valor Pixel");
        valor_pixel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valor_pixelActionPerformed(evt);
            }
        });

        histograma.setText("Histograma");
        histograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histogramaActionPerformed(evt);
            }
        });

        Zoom_in.setText("Zoom in");
        Zoom_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zoom_inActionPerformed(evt);
            }
        });

        Zoom_out.setText("Zoom Out");
        Zoom_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zoom_outActionPerformed(evt);
            }
        });

        convolucao.setText("Convolução");
        convolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convolucaoActionPerformed(evt);
            }
        });

        dilatacao.setText("Dilatação");
        dilatacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dilatacaoActionPerformed(evt);
            }
        });

        erosao.setText("Erosão");
        erosao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erosaoActionPerformed(evt);
            }
        });

        Abertura.setText("Abertura");
        Abertura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AberturaActionPerformed(evt);
            }
        });

        Fechamento.setText("Fechamento");
        Fechamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jspCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(Iniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sair)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Tons_de_cinza_media)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Tons_de_cinza_ponderada))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(thresholding)
                                    .addComponent(adicao)
                                    .addComponent(valor_pixel)
                                    .addComponent(Zoom_in)
                                    .addComponent(erosao))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(negativa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(isolar_canal))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(adicao_ponderada)
                                        .addGap(70, 70, 70)
                                        .addComponent(subtracao))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Abertura)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Fechamento))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Zoom_out)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dilatacao))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(histograma)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(convolucao))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(incrementar_canal_quantidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addComponent(incrementar_canal_porcentagem)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jspCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tons_de_cinza_media)
                            .addComponent(Tons_de_cinza_ponderada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(thresholding)
                            .addComponent(isolar_canal)
                            .addComponent(negativa))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(incrementar_canal_quantidade)
                            .addComponent(incrementar_canal_porcentagem))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adicao)
                            .addComponent(adicao_ponderada)
                            .addComponent(subtracao))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valor_pixel)
                            .addComponent(histograma)
                            .addComponent(convolucao))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Zoom_in)
                            .addComponent(Zoom_out)
                            .addComponent(dilatacao))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(erosao)
                            .addComponent(Abertura)
                            .addComponent(Fechamento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Iniciar)
                            .addComponent(Sair))
                        .addGap(40, 40, 40))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Inicia a webcam
     * @param evt Evento
     */
    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        webCam = new VideoCaptura();
        exibeQuadro = new ExibeQuadro(webCam,jlbCaptura);
        executor = new Thread(exibeQuadro);
        executor.start();
    }//GEN-LAST:event_IniciarActionPerformed

    /**
     * Para a execução do programa
     * @param evt Evento
     */
    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SairActionPerformed

    private void Tons_de_cinza_mediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tons_de_cinza_mediaActionPerformed
        try {
            webCam.Display_Image(Tons_de_cinza.media(webCam.capturaQuadroBufferedImage()));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Tons_de_cinza_mediaActionPerformed

    private void Tons_de_cinza_ponderadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tons_de_cinza_ponderadaActionPerformed
        try {
            webCam.Display_Image(Tons_de_cinza.ponderada(webCam.capturaQuadroBufferedImage()));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Tons_de_cinza_ponderadaActionPerformed

    private void thresholdingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdingActionPerformed
        try {
            int tax = Integer.parseInt( JOptionPane.showInputDialog( "entre com o limiar entre 0 e 255" ) );
            webCam.Display_Image(Thresholding.run(webCam.capturaQuadroBufferedImage(), tax));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_thresholdingActionPerformed

    private void negativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negativaActionPerformed
        try {
            webCam.Display_Image(Negativa.run(webCam.capturaQuadroBufferedImage()));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_negativaActionPerformed

    private void isolar_canalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isolar_canalActionPerformed
        try {
            int canal = Integer.parseInt( JOptionPane.showInputDialog( "Opcoes: 1. Vermelho - 2. Verde - 3. Azul" ) );
            webCam.Display_Image(Isolar_canal.run(webCam.capturaQuadroBufferedImage(), canal));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_isolar_canalActionPerformed

    private void incrementar_canal_quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementar_canal_quantidadeActionPerformed
        try {
            int quantidade = Integer.parseInt( JOptionPane.showInputDialog( "Valor a ser adicionado" ) );
            int canal = Integer.parseInt( JOptionPane.showInputDialog( "Opcoes: 1. Vermelho - 2. Verde - 3. Azul" ) );
            webCam.Display_Image(Incrementar_canal.quantidade(webCam.capturaQuadroBufferedImage(), canal, quantidade));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_incrementar_canal_quantidadeActionPerformed

    private void incrementar_canal_porcentagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementar_canal_porcentagemActionPerformed
        try {
            int porcentagem = Integer.parseInt( JOptionPane.showInputDialog( "Valor a ser adicionado" ) );
            int canal = Integer.parseInt( JOptionPane.showInputDialog( "Opcoes: 1. Vermelho - 2. Verde - 3. Azul" ) );
            webCam.Display_Image(Incrementar_canal.porcentagem(webCam.capturaQuadroBufferedImage(), canal, porcentagem));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_incrementar_canal_porcentagemActionPerformed

    private void adicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicaoActionPerformed
        try {
            BufferedImage image = webCam.capturaQuadroBufferedImage();
            Thread.sleep(2000);
            webCam.Display_Image(Adicao.simples(webCam.capturaQuadroBufferedImage(), image));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adicaoActionPerformed

    private void adicao_ponderadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicao_ponderadaActionPerformed
        try {
            float peso1 = Integer.parseInt( JOptionPane.showInputDialog( "Peso da primeira imagem: " ) );
            float peso2 = Integer.parseInt( JOptionPane.showInputDialog( "Peso da segunda imagem: " ) );
            BufferedImage image = webCam.capturaQuadroBufferedImage();
            Thread.sleep(2000);
            webCam.Display_Image(Adicao.ponderada(webCam.capturaQuadroBufferedImage(), image, peso1, peso2));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adicao_ponderadaActionPerformed

    private void subtracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtracaoActionPerformed
        try {
            BufferedImage image = webCam.capturaQuadroBufferedImage();
            Thread.sleep(2000);
            webCam.Display_Image(Subtracao.run(webCam.capturaQuadroBufferedImage(), image));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_subtracaoActionPerformed

    private void valor_pixelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valor_pixelActionPerformed
        try {
            int x = Integer.parseInt( JOptionPane.showInputDialog( "x: " ) );
            int y = Integer.parseInt( JOptionPane.showInputDialog( "y: " ) );
            int rgb[] = (Valor_pixel.run(webCam.capturaQuadroBufferedImage(), x, y));
            System.out.println(rgb[0]);
            System.out.println(rgb[1]);
            System.out.println(rgb[2]);
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_valor_pixelActionPerformed

    private void histogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histogramaActionPerformed
        try {
            LineChart_AWT histogram = new LineChart_AWT(webCam.capturaQuadroBufferedImage(), "Histograma", "Histograma de cores");
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_histogramaActionPerformed

    private void convolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convolucaoActionPerformed
        try {
            webCam.Display_Image(Convolucao.run(webCam.capturaQuadroBufferedImage(), mascara, 3));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_convolucaoActionPerformed

    private void Zoom_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zoom_inActionPerformed
        try {
            webCam.Display_Image(Zoom.zoom_in(webCam.capturaQuadroBufferedImage()));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Zoom_inActionPerformed

    private void Zoom_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zoom_outActionPerformed
        try {
            webCam.Display_Image(Zoom.zoom_out(webCam.capturaQuadroBufferedImage()));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Zoom_outActionPerformed

    private void dilatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dilatacaoActionPerformed
        try {
            int tax = Integer.parseInt( JOptionPane.showInputDialog( "Valor da limiar: " ) );
            BufferedImage image = Thresholding.run(webCam.capturaQuadroBufferedImage(), tax);
            webCam.Display_Image(Dilatacao.run(image, mascara2, 3));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dilatacaoActionPerformed

    private void erosaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erosaoActionPerformed
        try {
            int tax = Integer.parseInt( JOptionPane.showInputDialog( "Valor da limiar: " ) );
            BufferedImage image = Thresholding.run(webCam.capturaQuadroBufferedImage(), tax);
            webCam.Display_Image(Erosao.run(image, mascara2, 3));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_erosaoActionPerformed

    private void AberturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AberturaActionPerformed
        try {
            int tax = Integer.parseInt( JOptionPane.showInputDialog( "Valor da limiar: " ) );
            BufferedImage image = Thresholding.run(webCam.capturaQuadroBufferedImage(), tax);
            webCam.Display_Image(AbertFecha.abertura(image, mascara2, 3));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AberturaActionPerformed

    private void FechamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechamentoActionPerformed
        try {
            int tax = Integer.parseInt( JOptionPane.showInputDialog( "Valor da limiar: " ) );
            BufferedImage image = Thresholding.run(webCam.capturaQuadroBufferedImage(), tax);
            webCam.Display_Image(AbertFecha.fechamento(image, mascara2, 3));
        } catch (Exception ex) {
            Logger.getLogger(TrabalhoM1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FechamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrabalhoM1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrabalhoM1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrabalhoM1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrabalhoM1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TrabalhoM1().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abertura;
    private javax.swing.JButton Fechamento;
    private javax.swing.JButton Iniciar;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Tons_de_cinza_media;
    private javax.swing.JButton Tons_de_cinza_ponderada;
    private javax.swing.JButton Zoom_in;
    private javax.swing.JButton Zoom_out;
    private javax.swing.JButton adicao;
    private javax.swing.JButton adicao_ponderada;
    private javax.swing.JButton convolucao;
    private javax.swing.JButton dilatacao;
    private javax.swing.JButton erosao;
    private javax.swing.JButton histograma;
    private javax.swing.JButton incrementar_canal_porcentagem;
    private javax.swing.JButton incrementar_canal_quantidade;
    private javax.swing.JButton isolar_canal;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel jlbCaptura;
    private javax.swing.JScrollPane jspCaptura;
    private javax.swing.JButton negativa;
    private javax.swing.JButton subtracao;
    private javax.swing.JButton thresholding;
    private javax.swing.JButton valor_pixel;
    // End of variables declaration//GEN-END:variables
}

